{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFTestKR"
		},
		"AzureFunction1_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'AzureFunction1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"LinkedServ_ testadfstoragekr_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LinkedServ_ testadfstoragekr'"
		},
		"AzureFunction1_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://adffunctionpy.azurewebsites.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/csv_funciton')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Azure Function1",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "csv_to_json",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "abc",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@activity('csv_to_json').output",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunction1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "csv_to_json",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "adf_input_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "crm_profiles_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-08-06T04:26:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureFunction1')]",
				"[concat(variables('factoryId'), '/datasets/adf_input_ds')]",
				"[concat(variables('factoryId'), '/datasets/crm_profiles_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_table_foreach')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "csv_to_table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SOURCE_NAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SOURCE_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SOURCE_TYPE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SOURCE_TYPE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SOURCE_PHYSICALTYPE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SOURCE_PHYSICALTYPE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TARGET_NAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TARGET_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TARGET_TYPE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TARGET_TYPE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TARGET_PHYSICALTYPE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TARGET_PHYSICALTYPE",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "adf_input_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "csv_to_table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "create_json",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"value": "@json(string(pipeline().parameters.mapping))",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "AzureSqlTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "crm_profiles_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"mapping": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "SOURCE_NAME",
										"type": "SOURCE_TYPE",
										"physicalType": "SOURCE_PHYSICALTYPE"
									},
									"sink": {
										"name": "TARGET_NAME",
										"type": "TARGET_TYPE",
										"physicalType": "TARGET_PHYSICALTYPE"
									}
								}
							]
						}
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-08-04T13:02:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/adf_input_ds')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/crm_profiles_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_to_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "csv_to_csv",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "adf_input_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "crm_profiles_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-08-04T16:21:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/adf_input_ds')]",
				"[concat(variables('factoryId'), '/datasets/crm_profiles_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_to_json')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "csv_to_json",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "adf_input_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "crm_profiles_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"mapping": {
						"type": "string",
						"defaultValue": "x"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-08-04T16:19:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/adf_input_ds')]",
				"[concat(variables('factoryId'), '/datasets/crm_profiles_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "data_flow_job",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_csv_to_json",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadSourceData": {},
									"ExportJson": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-08-06T10:58:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_csv_to_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/json_to_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_json_to_csv",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ncp_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ncp_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-08-10T08:07:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ncp_json')]",
				"[concat(variables('factoryId'), '/datasets/ncp_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/json_to_json')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "map_json_to_json",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"value": "@json(string(pipeline().parameters.mapping))",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "crm_profiles_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Json_sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"mapping": {
						"type": "object"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-08-05T12:21:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/crm_profiles_ds')]",
				"[concat(variables('factoryId'), '/datasets/Json_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ncp_csv_database')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ncp_csv_database",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ncp_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-08-10T08:07:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ncp_csv')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ref_csv_json')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_template",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select template as mapping from ref_json_template",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "csv_to_json",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "get_template",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "adf_input_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "crm_profiles_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "csv_to_json",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@items",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "json_foreach_json",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"value": "@json(string(pipeline().parameters.mapping))",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "crm_profiles_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Json_sink",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"mapping": {
						"type": "object"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-08-05T11:09:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/adf_input_ds')]",
				"[concat(variables('factoryId'), '/datasets/crm_profiles_ds')]",
				"[concat(variables('factoryId'), '/datasets/Json_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/table_to_json')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_csv_rec",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "csv_rec_to_json",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings",
												"filePattern": "arrayOfObjects"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "AzureSqlTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "crm_profiles_ds",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"mapping": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "SOURCE_NAME",
										"type": "SOURCE_TYPE",
										"physicalType": "SOURCE_PHYSICALTYPE"
									},
									"sink": {
										"name": "TARGET_NAME",
										"type": "TARGET_TYPE",
										"physicalType": "TARGET_PHYSICALTYPE"
									}
								}
							]
						}
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-08-05T09:25:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/crm_profiles_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "json_str",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "crm_json"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "chargeDeviceID",
						"type": "varchar"
					},
					{
						"name": "reference",
						"type": "varchar"
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "latitude",
						"type": "varchar"
					},
					{
						"name": "longitude",
						"type": "varchar"
					},
					{
						"name": "subBuildingName",
						"type": "varchar"
					},
					{
						"name": "buildingName",
						"type": "varchar"
					},
					{
						"name": "buildingNumber",
						"type": "varchar"
					},
					{
						"name": "thoroughfare",
						"type": "varchar"
					},
					{
						"name": "street",
						"type": "varchar"
					},
					{
						"name": "doubleDependantLocality",
						"type": "varchar"
					},
					{
						"name": "dependantLocality",
						"type": "varchar"
					},
					{
						"name": "town",
						"type": "varchar"
					},
					{
						"name": "county",
						"type": "varchar"
					},
					{
						"name": "postcode",
						"type": "varchar"
					},
					{
						"name": "countryCode",
						"type": "varchar"
					},
					{
						"name": "uprn",
						"type": "varchar"
					},
					{
						"name": "deviceDescription",
						"type": "varchar"
					},
					{
						"name": "locationShortDescription",
						"type": "varchar"
					},
					{
						"name": "locationLongDescription",
						"type": "varchar"
					},
					{
						"name": "deviceManufacturer",
						"type": "varchar"
					},
					{
						"name": "deviceModel",
						"type": "varchar"
					},
					{
						"name": "deviceOwnerName",
						"type": "varchar"
					},
					{
						"name": "deviceOwnerWebsite",
						"type": "varchar"
					},
					{
						"name": "deviceOwnerTelephoneNo",
						"type": "varchar"
					},
					{
						"name": "deviceOwnerContactName",
						"type": "varchar"
					},
					{
						"name": "deviceControllerName",
						"type": "varchar"
					},
					{
						"name": "deviceControllerWebsite",
						"type": "varchar"
					},
					{
						"name": "deviceControllerTelephoneNo",
						"type": "varchar"
					},
					{
						"name": "deviceControllerContactName",
						"type": "varchar"
					},
					{
						"name": "deviceNetworks",
						"type": "varchar"
					},
					{
						"name": "chargeDeviceStatus",
						"type": "varchar"
					},
					{
						"name": "publishStatus",
						"type": "varchar"
					},
					{
						"name": "deviceValidated",
						"type": "varchar"
					},
					{
						"name": "dateCreated",
						"type": "varchar"
					},
					{
						"name": "dateUpdated",
						"type": "varchar"
					},
					{
						"name": "moderated",
						"type": "varchar"
					},
					{
						"name": "lastUpdated",
						"type": "varchar"
					},
					{
						"name": "lastUpdatedBy",
						"type": "varchar"
					},
					{
						"name": "attribution",
						"type": "varchar"
					},
					{
						"name": "dateDeleted",
						"type": "varchar"
					},
					{
						"name": "paymentRequired",
						"type": "varchar"
					},
					{
						"name": "paymentRequiredDetails",
						"type": "varchar"
					},
					{
						"name": "subscriptionRequired",
						"type": "varchar"
					},
					{
						"name": "subscriptionRequiredDetails",
						"type": "varchar"
					},
					{
						"name": "parkingFeesFlag",
						"type": "varchar"
					},
					{
						"name": "parkingFeesDetails",
						"type": "varchar"
					},
					{
						"name": "parkingFeesUrl",
						"type": "varchar"
					},
					{
						"name": "accessRestrictionFlag",
						"type": "varchar"
					},
					{
						"name": "accessRestrictionDetails",
						"type": "varchar"
					},
					{
						"name": "physicalRestrictionFlag",
						"type": "varchar"
					},
					{
						"name": "physicalRestrictionText",
						"type": "varchar"
					},
					{
						"name": "onStreetFlag",
						"type": "varchar"
					},
					{
						"name": "locationType",
						"type": "varchar"
					},
					{
						"name": "bearing",
						"type": "varchar"
					},
					{
						"name": "access24Hours",
						"type": "varchar"
					},
					{
						"name": "accessMondayFrom",
						"type": "varchar"
					},
					{
						"name": "accessMondayTo",
						"type": "varchar"
					},
					{
						"name": "accessTuesdayFrom",
						"type": "varchar"
					},
					{
						"name": "accessTuesdayTo",
						"type": "varchar"
					},
					{
						"name": "accessWednesdayFrom",
						"type": "varchar"
					},
					{
						"name": "accessWednesdayTo",
						"type": "varchar"
					},
					{
						"name": "accessThursdayFrom",
						"type": "varchar"
					},
					{
						"name": "accessThursdayTo",
						"type": "varchar"
					},
					{
						"name": "accessFridayFrom",
						"type": "varchar"
					},
					{
						"name": "accessFridayTo",
						"type": "varchar"
					},
					{
						"name": "accessSaturdayFrom",
						"type": "varchar"
					},
					{
						"name": "accessSaturdayTo",
						"type": "varchar"
					},
					{
						"name": "accessSundayFrom",
						"type": "varchar"
					},
					{
						"name": "accessSundayTo",
						"type": "varchar"
					},
					{
						"name": "connector1ID",
						"type": "varchar"
					},
					{
						"name": "connector1Type",
						"type": "varchar"
					},
					{
						"name": "connector1RatedOutputKW",
						"type": "varchar"
					},
					{
						"name": "connector1OutputCurrent",
						"type": "varchar"
					},
					{
						"name": "connector1RatedVoltage",
						"type": "varchar"
					},
					{
						"name": "connector1ChargeMethod",
						"type": "varchar"
					},
					{
						"name": "connector1ChargeMode",
						"type": "varchar"
					},
					{
						"name": "connector1TetheredCable",
						"type": "varchar"
					},
					{
						"name": "connector1Status",
						"type": "varchar"
					},
					{
						"name": "connector1Description",
						"type": "varchar"
					},
					{
						"name": "connector1Validated",
						"type": "varchar"
					},
					{
						"name": "connector2ID",
						"type": "varchar"
					},
					{
						"name": "connector2Type",
						"type": "varchar"
					},
					{
						"name": "connector2RatedOutputKW",
						"type": "varchar"
					},
					{
						"name": "connector2OutputCurrent",
						"type": "varchar"
					},
					{
						"name": "connector2RatedVoltage",
						"type": "varchar"
					},
					{
						"name": "connector2ChargeMethod",
						"type": "varchar"
					},
					{
						"name": "connector2ChargeMode",
						"type": "varchar"
					},
					{
						"name": "connector2TetheredCable",
						"type": "varchar"
					},
					{
						"name": "connector2Status",
						"type": "varchar"
					},
					{
						"name": "connector2Description",
						"type": "varchar"
					},
					{
						"name": "connector2Validated",
						"type": "varchar"
					},
					{
						"name": "connector3ID",
						"type": "varchar"
					},
					{
						"name": "connector3Type",
						"type": "varchar"
					},
					{
						"name": "connector3RatedOutputKW",
						"type": "varchar"
					},
					{
						"name": "connector3OutputCurrent",
						"type": "varchar"
					},
					{
						"name": "connector3RatedVoltage",
						"type": "varchar"
					},
					{
						"name": "connector3ChargeMethod",
						"type": "varchar"
					},
					{
						"name": "connector3ChargeMode",
						"type": "varchar"
					},
					{
						"name": "connector3TetheredCable",
						"type": "varchar"
					},
					{
						"name": "connector3Status",
						"type": "varchar"
					},
					{
						"name": "connector3Description",
						"type": "varchar"
					},
					{
						"name": "connector3Validated",
						"type": "varchar"
					},
					{
						"name": "connector4ID",
						"type": "varchar"
					},
					{
						"name": "connector4Type",
						"type": "varchar"
					},
					{
						"name": "connector4RatedOutputKW",
						"type": "varchar"
					},
					{
						"name": "connector4OutputCurrent",
						"type": "varchar"
					},
					{
						"name": "connector4RatedVoltage",
						"type": "varchar"
					},
					{
						"name": "connector4ChargeMethod",
						"type": "varchar"
					},
					{
						"name": "connector4ChargeMode",
						"type": "varchar"
					},
					{
						"name": "connector4TetheredCable",
						"type": "varchar"
					},
					{
						"name": "connector4Status",
						"type": "varchar"
					},
					{
						"name": "connector4Description",
						"type": "varchar"
					},
					{
						"name": "connector4Validated",
						"type": "varchar"
					},
					{
						"name": "connector5ID",
						"type": "varchar"
					},
					{
						"name": "connector5Type",
						"type": "varchar"
					},
					{
						"name": "connector5RatedOutputKW",
						"type": "varchar"
					},
					{
						"name": "connector5OutputCurrent",
						"type": "varchar"
					},
					{
						"name": "connector5RatedVoltage",
						"type": "varchar"
					},
					{
						"name": "connector5ChargeMethod",
						"type": "varchar"
					},
					{
						"name": "connector5ChargeMode",
						"type": "varchar"
					},
					{
						"name": "connector5TetheredCable",
						"type": "varchar"
					},
					{
						"name": "connector5Status",
						"type": "varchar"
					},
					{
						"name": "connector5Description",
						"type": "varchar"
					},
					{
						"name": "connector5Validated",
						"type": "varchar"
					},
					{
						"name": "connector6ID",
						"type": "varchar"
					},
					{
						"name": "connector6Type",
						"type": "varchar"
					},
					{
						"name": "connector6RatedOutputKW",
						"type": "varchar"
					},
					{
						"name": "connector6OutputCurrent",
						"type": "varchar"
					},
					{
						"name": "connector6RatedVoltage",
						"type": "varchar"
					},
					{
						"name": "connector6ChargeMethod",
						"type": "varchar"
					},
					{
						"name": "connector6ChargeMode",
						"type": "varchar"
					},
					{
						"name": "connector6TetheredCable",
						"type": "varchar"
					},
					{
						"name": "connector6Status",
						"type": "varchar"
					},
					{
						"name": "connector6Description",
						"type": "varchar"
					},
					{
						"name": "connector6Validated",
						"type": "varchar"
					},
					{
						"name": "connector7ID",
						"type": "varchar"
					},
					{
						"name": "connector7Type",
						"type": "varchar"
					},
					{
						"name": "connector7RatedOutputKW",
						"type": "varchar"
					},
					{
						"name": "connector7OutputCurrent",
						"type": "varchar"
					},
					{
						"name": "connector7RatedVoltage",
						"type": "varchar"
					},
					{
						"name": "connector7ChargeMethod",
						"type": "varchar"
					},
					{
						"name": "connector7ChargeMode",
						"type": "varchar"
					},
					{
						"name": "connector7TetheredCable",
						"type": "varchar"
					},
					{
						"name": "connector7Status",
						"type": "varchar"
					},
					{
						"name": "connector7Description",
						"type": "varchar"
					},
					{
						"name": "connector7Validated",
						"type": "varchar"
					},
					{
						"name": "connector8ID",
						"type": "varchar"
					},
					{
						"name": "connector8Type",
						"type": "varchar"
					},
					{
						"name": "connector8RatedOutputKW",
						"type": "varchar"
					},
					{
						"name": "connector8OutputCurrent",
						"type": "varchar"
					},
					{
						"name": "connector8RatedVoltage",
						"type": "varchar"
					},
					{
						"name": "connector8ChargeMethod",
						"type": "varchar"
					},
					{
						"name": "connector8ChargeMode",
						"type": "varchar"
					},
					{
						"name": "connector8TetheredCable",
						"type": "varchar"
					},
					{
						"name": "connector8Status",
						"type": "varchar"
					},
					{
						"name": "connector8Description",
						"type": "varchar"
					},
					{
						"name": "connector8Validated",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "national_charge_points"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServ_ testadfstoragekr",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "final.json",
						"folderPath": "output_json",
						"container": "adfsource"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServ_ testadfstoragekr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_input_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServ_ testadfstoragekr",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "RawToStd_CRM_PROFILES_CONT.csv",
						"folderPath": "input",
						"container": "adfsource"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServ_ testadfstoragekr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/crm_profiles_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServ_ testadfstoragekr",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "crm_profiles.json",
						"folderPath": "output",
						"container": "adfsource"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServ_ testadfstoragekr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ncp_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServ_ testadfstoragekr",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "national-charge-point-registry.csv",
						"folderPath": "ev",
						"container": "adfsource"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServ_ testadfstoragekr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ncp_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServ_ testadfstoragekr",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "NCR.json",
						"folderPath": "ev",
						"container": "adfsource"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Scheme": {
							"type": "object",
							"properties": {
								"SchemeCode": {
									"type": "string"
								},
								"SchemeData": {
									"type": "object",
									"properties": {
										"OrganisationName": {
											"type": "string"
										},
										"Website": {
											"type": "string"
										},
										"TelephoneNo": {
											"type": "string"
										}
									}
								}
							}
						},
						"ChargeDevice": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"ChargeDeviceId": {
										"type": "string"
									},
									"ChargeDeviceRef": {
										"type": "string"
									},
									"ChargeDeviceName": {
										"type": "string"
									},
									"ChargeDeviceText": {
										"type": "null"
									},
									"ChargeDeviceLocation": {
										"type": "object",
										"properties": {
											"Latitude": {
												"type": "string"
											},
											"Longitude": {
												"type": "string"
											},
											"Address": {
												"type": "object",
												"properties": {
													"SubBuildingName": {
														"type": "null"
													},
													"BuildingName": {
														"type": "string"
													},
													"BuildingNumber": {
														"type": "string"
													},
													"Thoroughfare": {
														"type": "string"
													},
													"Street": {
														"type": "string"
													},
													"DoubleDependantLocality": {
														"type": "null"
													},
													"DependantLocality": {
														"type": "null"
													},
													"PostTown": {
														"type": "string"
													},
													"County": {
														"type": "string"
													},
													"PostCode": {
														"type": "string"
													},
													"Country": {
														"type": "string"
													},
													"UPRN": {
														"type": "null"
													}
												}
											},
											"LocationShortDescription": {
												"type": "null"
											},
											"LocationLongDescription": {
												"type": "string"
											}
										}
									},
									"ChargeDeviceManufacturer": {
										"type": "null"
									},
									"ChargeDeviceModel": {
										"type": "null"
									},
									"PublishStatusID": {
										"type": "string"
									},
									"DateCreated": {
										"type": "string"
									},
									"DateUpdated": {
										"type": "string"
									},
									"Attribution": {
										"type": "string"
									},
									"DateDeleted": {
										"type": "string"
									},
									"Connector": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"ConnectorId": {
													"type": "string"
												},
												"ConnectorType": {
													"type": "string"
												},
												"RatedOutputkW": {
													"type": "string"
												},
												"RatedOutputVoltage": {
													"type": "string"
												},
												"RatedOutputCurrent": {
													"type": "string"
												},
												"ChargeMethod": {
													"type": "string"
												},
												"ChargeMode": {
													"type": "string"
												},
												"ChargePointStatus": {
													"type": "string"
												},
												"TetheredCable": {
													"type": "string"
												},
												"Information": {
													"type": "string"
												},
												"Validated": {
													"type": "string"
												}
											}
										}
									},
									"DeviceOwner": {
										"type": "object",
										"properties": {
											"OrganisationName": {
												"type": "string"
											},
											"SchemeCode": {
												"type": "string"
											},
											"Website": {
												"type": "string"
											},
											"TelephoneNo": {
												"type": "string"
											}
										}
									},
									"DeviceController": {
										"type": "object",
										"properties": {
											"OrganisationName": {
												"type": "string"
											},
											"SchemeCode": {
												"type": "string"
											},
											"Website": {
												"type": "string"
											},
											"TelephoneNo": {
												"type": "string"
											}
										}
									},
									"DeviceAccess": {
										"type": "array"
									},
									"DeviceNetworks": {
										"type": "string"
									},
									"ChargeDeviceStatus": {
										"type": "string"
									},
									"PublishStatus": {
										"type": "string"
									},
									"DeviceValidated": {
										"type": "string"
									},
									"RecordModerated": {
										"type": "string"
									},
									"RecordLastUpdated": {
										"type": "string"
									},
									"RecordLastUpdatedBy": {
										"type": "string"
									},
									"PaymentRequiredFlag": {
										"type": "boolean"
									},
									"PaymentDetails": {
										"type": "string"
									},
									"SubscriptionRequiredFlag": {
										"type": "boolean"
									},
									"SubscriptionDetails": {
										"type": "string"
									},
									"ParkingFeesFlag": {
										"type": "boolean"
									},
									"ParkingFeesDetails": {
										"type": "string"
									},
									"ParkingFeesUrl": {
										"type": "null"
									},
									"AccessRestrictionFlag": {
										"type": "boolean"
									},
									"AccessRestrictionDetails": {
										"type": "string"
									},
									"PhysicalRestrictionFlag": {
										"type": "boolean"
									},
									"PhysicalRestrictionText": {
										"type": "string"
									},
									"OnStreetFlag": {
										"type": "boolean"
									},
									"LocationType": {
										"type": "string"
									},
									"Bearing": {
										"type": "null"
									},
									"Accessible24Hours": {
										"type": "boolean"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServ_ testadfstoragekr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/output_test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServ_ testadfstoragekr",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "out.csv",
						"folderPath": "output",
						"container": "adfsource"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServ_ testadfstoragekr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/txt_out')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServ_ testadfstoragekr",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "out.txt",
						"folderPath": "output",
						"container": "adfsource"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServ_ testadfstoragekr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFunction1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('AzureFunction1_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('AzureFunction1_functionKey')]"
					},
					"authentication": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedServ_ testadfstoragekr')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LinkedServ_ testadfstoragekr_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1_copy1_060821_856')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "adf_input_ds",
								"type": "DatasetReference"
							},
							"name": "csvds"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Json_sink",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "DerivedColumn3"
						}
					],
					"script": "source(output(\n\t\tSOURCE_NAME as string,\n\t\tSOURCE_TYPE as string,\n\t\tSOURCE_PHYSICALTYPE as string,\n\t\tTARGET_NAME as string,\n\t\tTARGET_TYPE as string,\n\t\tTARGET_PHYSICALTYPE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> csvds\ncsvds derive(subjson = @(source=@(name=SOURCE_NAME,\n\t\ttype=SOURCE_TYPE,\n\t\tphysicalType=SOURCE_PHYSICALTYPE),\n\t\tsink=@(name=TARGET_NAME,\n\t\ttype=TARGET_TYPE,\n\t\tphysicalType=TARGET_PHYSICALTYPE))) ~> DerivedColumn1\nDerivedColumn1 aggregate(mappings = collect(subjson)) ~> Aggregate1\nAggregate1 derive(type = concat(\"TabularTranslator\"),\n\t\tmappings = mappings) ~> DerivedColumn2\nDerivedColumn2 derive(out_json = concat('\"type\":', '\"',toString(type),'\",\"', 'mappings\":', toString(mappings))) ~> DerivedColumn3\nDerivedColumn3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\ttype,\n\t\tmappings\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/adf_input_ds')]",
				"[concat(variables('factoryId'), '/datasets/Json_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_csv_to_json')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "adf_input_ds",
								"type": "DatasetReference"
							},
							"name": "ReadSourceData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Json_sink",
								"type": "DatasetReference"
							},
							"name": "ExportJson"
						}
					],
					"transformations": [
						{
							"name": "DeriveSourceSinkJson",
							"description": "Creating 'subjson' column using the columns 'SOURCE_NAME, SOURCE_TYPE, SOURCE_PHYSICALTYPE, TARGET_NAME, TARGET_TYPE, TARGET_PHYSICALTYPE, subjson'"
						},
						{
							"name": "AggregateMappings",
							"description": "Aggregating data (of 'subjson' column) by producing column 'mappings'"
						},
						{
							"name": "AppendTranslator"
						}
					],
					"script": "source(output(\n\t\tSOURCE_NAME as string,\n\t\tSOURCE_TYPE as string,\n\t\tSOURCE_PHYSICALTYPE as string,\n\t\tTARGET_NAME as string,\n\t\tTARGET_TYPE as string,\n\t\tTARGET_PHYSICALTYPE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ReadSourceData\nReadSourceData derive(subjson = @(source=@(name=SOURCE_NAME,\n\t\ttype=SOURCE_TYPE,\n\t\tphysicalType=SOURCE_PHYSICALTYPE),\n\t\tsink=@(name=TARGET_NAME,\n\t\ttype=TARGET_TYPE,\n\t\tphysicalType=TARGET_PHYSICALTYPE))) ~> DeriveSourceSinkJson\nDeriveSourceSinkJson aggregate(mappings = collect(subjson)) ~> AggregateMappings\nAggregateMappings derive(type = concat(\"TabularTranslator\"),\n\t\tmappings = mappings) ~> AppendTranslator\nAppendTranslator sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\ttype,\n\t\tmappings\n\t)) ~> ExportJson"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/adf_input_ds')]",
				"[concat(variables('factoryId'), '/datasets/Json_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		}
	]
}